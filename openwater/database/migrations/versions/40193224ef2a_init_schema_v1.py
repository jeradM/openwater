"""'init_schema_v1'

Revision ID: 40193224ef2a
Revises: 
Create Date: 2020-06-04 20:36:39.650432

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "40193224ef2a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "plugin_config",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plugin_id", sa.String(length=50), nullable=True),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_plugin_config")),
    )
    op.create_table(
        "program",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("program_type", sa.String(length=20), nullable=False),
        sa.Column("attrs", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_program")),
    )
    op.create_table(
        "zone",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("zone_type", sa.String(length=50), nullable=False),
        sa.Column("is_master", sa.Boolean(name="is_master_bool"), nullable=True),
        sa.Column("attrs", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_zone")),
    )
    op.create_table(
        "master_zones",
        sa.Column("zone_id", sa.Integer(), nullable=True),
        sa.Column("master_zone_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["master_zone_id"],
            ["zone.id"],
            name=op.f("fk_master_zones_master_zone_id_zone"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["zone_id"],
            ["zone.id"],
            name=op.f("fk_master_zones_zone_id_zone"),
            ondelete="CASCADE",
        ),
        sa.UniqueConstraint(
            "zone_id", "master_zone_id", name=op.f("uq_master_zones_zone_id")
        ),
    )
    op.create_table(
        "program_step",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("program_id", sa.Integer(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["program_id"],
            ["program.id"],
            name=op.f("fk_program_step_program_id_program"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_program_step")),
    )
    op.create_table(
        "schedule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("program_id", sa.Integer(), nullable=False),
        sa.Column("enabled", sa.Boolean(name="enabled_bool"), nullable=False),
        sa.Column("at", sa.Integer(), nullable=False),
        sa.Column("day_interval", sa.Integer(), nullable=True),
        sa.Column("days_restriction", sa.String(length=1), nullable=True),
        sa.Column("dow_mask", sa.Integer(), nullable=True),
        sa.Column("minute_interval", sa.Integer(), nullable=True),
        sa.Column("on_day", sa.Date(), nullable=True),
        sa.Column("start_day", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["program_id"],
            ["program.id"],
            name=op.f("fk_schedule_program_id_program"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_schedule")),
    )
    op.create_table(
        "zone_run",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("zone_id", sa.Integer(), nullable=False),
        sa.Column("start", sa.DateTime(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["zone_id"],
            ["zone.id"],
            name=op.f("fk_zone_run_zone_id_zone"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_zone_run")),
    )
    op.create_table(
        "program_action",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("step_id", sa.Integer(), nullable=False),
        sa.Column("action_type", sa.String(length=10), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["step_id"],
            ["program_step.id"],
            name=op.f("fk_program_action_step_id_program_step"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_program_action")),
    )
    op.create_table(
        "program_run",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("program_id", sa.Integer(), nullable=False),
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column("start", sa.DateTime(), nullable=True),
        sa.Column("end", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["program_id"],
            ["program.id"],
            name=op.f("fk_program_run_program_id_program"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedule.id"],
            name=op.f("fk_program_run_schedule_id_schedule"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_program_run")),
    )
    op.create_table(
        "program_action_zones",
        sa.Column("action_id", sa.Integer(), nullable=False),
        sa.Column("zone_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["action_id"],
            ["program_action.id"],
            name=op.f("fk_program_action_zones_action_id_program_action"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["zone_id"],
            ["zone.id"],
            name=op.f("fk_program_action_zones_zone_id_zone"),
            ondelete="CASCADE",
        ),
        sa.UniqueConstraint(
            "action_id", "zone_id", name=op.f("uq_program_action_zones_action_id")
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("program_action_zones")
    op.drop_table("program_run")
    op.drop_table("program_action")
    op.drop_table("zone_run")
    op.drop_table("schedule")
    op.drop_table("program_step")
    op.drop_table("master_zones")
    op.drop_table("zone")
    op.drop_table("program")
    op.drop_table("plugin_config")
    # ### end Alembic commands ###
